#!/bin/bash

# Основные метаданные пакета
PKG_NAME="htop"
PKG_VERSION="3.3.0"
PKG_SRC_URL="https://github.com/htop-dev/htop/releases/download/$PKG_VERSION/htop-$PKG_VERSION.tar.gz"
PKG_ARCHITECTURE="amd64"
PKG_LICENSE="GPL-2.0"
PKG_DEPENDENCIES="gcc:14.2.0 make:4.4.1 ncurses:6.4"
PKG_FETCH_METHOD="wget"
PKG_INSTALL_DIR="/usr"
PKG_BUILD_DIR="htop-$PKG_VERSION"

# Разрешение зависимостей
resolve_dependencies() {
    if [ -n "$PKG_DEPENDENCIES" ]; then
        echo "Resolving dependencies..."
        for dep in $PKG_DEPENDENCIES; do
            local dep_name=$(echo "$dep" | cut -d: -f1)
            local dep_version=$(echo "$dep" | cut -d: -f2)
            echo "Checking dependency: $dep_name version $dep_version"
        done
    else
        echo "No dependencies."
    fi
}

# Фаза распаковки
unpack_stage() {
    echo "Unpacking sources to /tmp/$PKG_BUILD_DIR..."
    mkdir -p "/tmp/$PKG_BUILD_DIR"
    cd "/tmp/$PKG_BUILD_DIR" || {
        echo "ERROR: Failed to change directory to /tmp/$PKG_BUILD_DIR"
        exit 1
    }
    echo "Downloading from $PKG_SRC_URL..."
    if ! wget -q --no-check-certificate --timeout=10 "$PKG_SRC_URL" -O "$PKG_NAME-$PKG_VERSION.tar.gz" 2> wget_error.log; then
        echo "ERROR downloading sources for $PKG_NAME: Failed to download from $PKG_SRC_URL"
        cat wget_error.log
        exit 1
    fi
    echo "Extracting $PKG_NAME-$PKG_VERSION.tar.gz..."
    if ! tar -xzf "$PKG_NAME-$PKG_VERSION.tar.gz" --strip-components=1; then
        echo "ERROR: Failed to extract $PKG_NAME-$PKG_VERSION.tar.gz"
        exit 1
    fi
    rm -f "$PKG_NAME-$PKG_VERSION.tar.gz" wget_error.log
    echo "Unpacking completed."
}

# Фаза компиляции
compile_stage() {
    echo "Compiling package in /tmp/$PKG_BUILD_DIR..."
    cd "/tmp/$PKG_BUILD_DIR" || {
        echo "ERROR: Failed to change directory to /tmp/$PKG_BUILD_DIR"
        exit 1
    }
    ./configure --prefix="$PKG_INSTALL_DIR" \
                --enable-unicode \
                --with-ncursesw || {
        echo "ERROR: Configure failed for $PKG_NAME. Check /tmp/$PKG_BUILD_DIR/config.log for details."
        exit 1
    }
    make -j$(nproc) 2>&1 | tee build.log || {
        echo "ERROR: Make failed for $PKG_NAME. Check /tmp/$PKG_BUILD_DIR/build.log for details."
        exit 1
    }
    echo "Compilation completed."
}

# Фаза установки
install_stage() {
    echo "Installing package to $PKG_INSTALL_DIR..."
    cd "/tmp/$PKG_BUILD_DIR" || {
        echo "ERROR: Failed to change directory to /tmp/$PKG_BUILD_DIR"
        exit 1
    }
    make install 2>&1 | tee install.log || {
        echo "ERROR: Installation failed for $PKG_NAME. Check /tmp/$PKG_BUILD_DIR/install.log for details."
        exit 1
    }
    echo "Installation completed."
}

# Общая стадия
default() {
    echo "Building and installing package $PKG_NAME version $PKG_VERSION..."
    resolve_dependencies
    unpack_stage
    compile_stage
    install_stage
}

# Эмулятор команд
emake() {
    case "$1" in
        "unpack")
            unpack_stage
            ;;
        "compile")
            compile_stage
            ;;
        "install")
            install_stage
            ;;
        *)
            echo "Unknown command: $1"
            exit 1
            ;;
    esac
}

# Обработка ошибок
handle_error() {
    echo "Error: Build or installation process failed."
    exit 1
}

# Главная функция
main() {
    trap 'handle_error' ERR
    emake "$1"
}

# Запуск
main "$@"
